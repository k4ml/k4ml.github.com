<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/emacs.atom.xml" rel="self"></link><id>/</id><updated>2012-09-30T04:54:08Z</updated><entry><title></title><link href="/.html" rel="alternate"></link><updated>2012-09-30T04:54:08Z</updated><author><name>kamal</name></author><id>tag:,2012-09-30:.html</id><summary type="html">&lt;p&gt;The following is a list of ideas of functionality which would be nice
to have in &lt;cite&gt;rst.el&lt;/cite&gt;. In the examples a &lt;tt class="docutils literal"&gt;&amp;#64;&lt;/tt&gt; stands for the cursor.&lt;/p&gt;
&lt;div class="section" id="convert-to-id"&gt;
&lt;h2&gt;Convert to id&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Convert the region to an HTML id&lt;ul&gt;
&lt;li&gt;For instance &amp;quot;Eine Überschrift&amp;quot; to &amp;quot;eine-berschrift&amp;quot;&lt;/li&gt;
&lt;li&gt;According the same rules as reST does this&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="jump-to-internal-target"&gt;
&lt;h2&gt;Jump to internal target&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A command to jump to the internal target the point is on&lt;/li&gt;
&lt;li&gt;A target may be&lt;ul&gt;
&lt;li&gt;A section title&lt;/li&gt;
&lt;li&gt;Footnotes / citations&lt;/li&gt;
&lt;li&gt;Inline internal targets&lt;/li&gt;
&lt;li&gt;Hyperlink target definition&lt;/li&gt;
&lt;li&gt;Substitution definition&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;See hunk #26 in &lt;cite&gt;rst_el-emacs_V23_1_patch1_1_2&lt;/cite&gt; vs. &lt;cite&gt;emacs_V23_1&lt;/cite&gt;
for some ideas&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="completion-for-directive-options"&gt;
&lt;h2&gt;Completion for directive options&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Imagine&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. list-table::
   :&amp;#64;
&lt;/pre&gt;
&lt;p&gt;with the cursor at the asterisk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There should be a command which offers all the possible options for
this particular directive as completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;May be &lt;cite&gt;skeleton.el&lt;/cite&gt; can also be useful&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="completion-for-directives"&gt;
&lt;h2&gt;Completion for directives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Imagine&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. &amp;#64;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There should be a command which offers all directives as completion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;May be this should work for other keywords as well&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;May be this could work even at the beginning of the line&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Completion must be bound to M-TAB&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Already existing binding must be chained&lt;/li&gt;
&lt;li&gt;May be &lt;cite&gt;expand.el&lt;/cite&gt; can help (look in package finder)?&lt;/li&gt;
&lt;li&gt;May be &lt;cite&gt;hippie&lt;/cite&gt; is good here&lt;/li&gt;
&lt;li&gt;Check &lt;cite&gt;(info)autotype&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="completion-for-user-defined-elements"&gt;
&lt;h2&gt;Completion for user-defined elements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Imagine&lt;/p&gt;
&lt;pre class="literal-block"&gt;
|&amp;#64;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[&amp;#64;
&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre class="literal-block"&gt;
_&amp;#64;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There should be a command which offers all defined substitutions /
footnotes / links as completion&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="insertion-of-link-alias"&gt;
&lt;h2&gt;Insertion of link alias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Imagine&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Aspect of something
===================

This is about the `aspect of something`_&amp;#64;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;There should be a command which asks you for an alias for the link,
add the alias and change the link&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. _aspects of something:

Aspect of something
===================

This is about the `aspects of something`_&amp;#64;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="smart-use-of-iimage-mode"&gt;
&lt;h2&gt;Smart use of &lt;cite&gt;iimage-mode&lt;/cite&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There is &lt;cite&gt;iimage-mode&lt;/cite&gt; which shows &lt;tt class="docutils literal"&gt;.. image::&lt;/tt&gt;s in Emacs&lt;/li&gt;
&lt;li&gt;May be we can add a binding to toggle it&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="toc-in-speedbar"&gt;
&lt;h2&gt;TOC in speedbar&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If the TOC is displayed in the speedbar this could be used for
permanent navigation&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="toc-mode-without-markup"&gt;
&lt;h2&gt;toc-mode without markup&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The markup which may be contained in a section title is not useful
in toc-mode and should be suppressed&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sophisticated-navigation-in-sections"&gt;
&lt;h2&gt;Sophisticated navigation in sections&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Navigation in sections similar to navigation in other structured data&lt;ul&gt;
&lt;li&gt;Like XML, Lisp&lt;/li&gt;
&lt;li&gt;C-M-u für Up&lt;/li&gt;
&lt;li&gt;C-M-d für Down&lt;/li&gt;
&lt;li&gt;C-M-f / C-M-b für Forward / Backward&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="display-of-current-location"&gt;
&lt;h2&gt;Display of current location&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Display the &amp;quot;section path&amp;quot; to the current point&lt;/li&gt;
&lt;li&gt;Like in XML: In which element is the point?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="toc-mode-only-to-a-certain-level"&gt;
&lt;h2&gt;toc-mode only to a certain level&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If a TOC buffer is created a prefix argument should limit the depth
of the listing to the given level&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="imenu-support"&gt;
&lt;h2&gt;Imenu support&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Imenu could be supported&lt;ul&gt;
&lt;li&gt;See &lt;cite&gt;(elisp)Imenu&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="outline-support"&gt;
&lt;h2&gt;Outline support&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Support for &lt;cite&gt;outline-mode&lt;/cite&gt; / &lt;cite&gt;allout-mode&lt;/cite&gt; would be nice&lt;ul&gt;
&lt;li&gt;Should consider section titles&lt;ul&gt;
&lt;li&gt;May be item lists can also be included&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using &lt;cite&gt;allout-mode&lt;/cite&gt; is difficult&lt;ul&gt;
&lt;li&gt;It's not customizable enough for the complex syntax of
reStructuredText&lt;/li&gt;
&lt;li&gt;However, some commands make sense&lt;ul&gt;
&lt;li&gt;Motion commands&lt;/li&gt;
&lt;li&gt;Exposure commands&lt;/li&gt;
&lt;li&gt;Some alteration commands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Should be reimplemented&lt;ul&gt;
&lt;li&gt;Key bindings need to be reused&lt;ul&gt;
&lt;li&gt;However, care must be taken if a file uses &lt;cite&gt;allout-mode&lt;/cite&gt; for
instance by comment strings&lt;/li&gt;
&lt;li&gt;In this case key bindings must not be overridden&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A command adding / updating &lt;cite&gt;allout-mode&lt;/cite&gt; tags could be a solution&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sophisticated-filling"&gt;
&lt;h2&gt;Sophisticated filling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;These things must be filled special:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Definitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Filling of&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* VeryLongWordSuchAsAnURLVeryLongWordSuchAsAnURLVeryLongWordSuchAsAnURLVeryLongWordSuchAsAnURLVeryLongWordSuchAsAnURL
&lt;/pre&gt;
&lt;p&gt;should work as expected by &lt;em&gt;not&lt;/em&gt; breaking the line&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;These things may not be filled at all&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Literal blocks&lt;/li&gt;
&lt;li&gt;Tables&lt;/li&gt;
&lt;li&gt;Section headers&lt;/li&gt;
&lt;li&gt;Link definitions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sophisticated-indentation"&gt;
&lt;h2&gt;Sophisticated indentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;It should be generally possible to shift one more to the right&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;This makes indentation for quotes possible&lt;/li&gt;
&lt;li&gt;But not for literal blocks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;For item lists the best tab should be on the same level as the last
item:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* bla

&amp;#64;
&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The second best tab should be where text starts:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* bla

  &amp;#64;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&amp;lt;backtab&amp;gt; should be used to indent in the other direction&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Or may be C-u &amp;lt;tab&amp;gt; but this has a different meaning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&amp;lt;tab&amp;gt; could obsolete C-c C-r &amp;lt;tab&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;For this the indentation needs to be determined at the start
instead of per line&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&amp;lt;tab&amp;gt; over list works:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Text

  * GGGGGG
  * SSSSSSSSSSSSSSS
  * TTTTTTTT
  * ZZZZZZZZ
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&amp;lt;tab&amp;gt; over list doesn't work:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Text

* GGGGGG
* SSSSSSSSSSSSSSS
* TTTTTTTT
* ZZZZZZZZ
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="list-to-sections"&gt;
&lt;h2&gt;List to sections&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A command would be nice which&lt;ul&gt;
&lt;li&gt;transforms the first level of a nested list in a region into a
header&lt;/li&gt;
&lt;li&gt;removes one level of indentation from the rest of the list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="change-section-level-by-more-than-one-step"&gt;
&lt;h2&gt;Change section level by more than one step&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It would be nice if &amp;lt;C-h&amp;gt; &lt;cite&gt;rst-adjust&lt;/cite&gt; could rotate a section
adornment more than one level&lt;/li&gt;
&lt;li&gt;A modification of the semantic of the prefix arguments could do this&lt;ul&gt;
&lt;li&gt;Non-zero numeric prefix arg n rotates n step in the given direction&lt;/li&gt;
&lt;li&gt;Prefix arg 0 toggles overline / underline&lt;ul&gt;
&lt;li&gt;This would be different from current setup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="compiling-for-syntax-check"&gt;
&lt;h2&gt;Compiling for syntax check&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Compiling with results going to &lt;cite&gt;/dev/null&lt;/cite&gt; would be useful&lt;ul&gt;
&lt;li&gt;This would just do a syntax check with no files lying around&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Toolset choice for &amp;lt;C-c C-c C-c&amp;gt; &lt;cite&gt;rst-compile&lt;/cite&gt; must be by
customizable if at all necessary&lt;ul&gt;
&lt;li&gt;Customization group must be used&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="renumber-an-exisiting-enumeration"&gt;
&lt;h2&gt;Renumber an exisiting enumeration&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Renumbering an exisiting enumeration is not possible yet&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="command-to-move-across-blocks"&gt;
&lt;h2&gt;Command to move across blocks&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A command moving forward / backward across the content blocks of the
current block would be nice&lt;ul&gt;
&lt;li&gt;For instance: Move across all blocks contained in an item or field&lt;/li&gt;
&lt;li&gt;This would move to the start of the sibling of the current block&lt;/li&gt;
&lt;li&gt;Would allow to jump to the next item on the same level in a list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;lt;C-M-f&amp;gt; &lt;cite&gt;forward-sexp&lt;/cite&gt; could be a nice binding&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="rst-toc-insert-features"&gt;
&lt;h2&gt;rst-toc-insert features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;cite&gt;contents::&lt;/cite&gt; options could be parsed to figure out how deep to
render the inserted TOC&lt;/li&gt;
&lt;li&gt;On load, detect any existing TOCs and set the properties for links&lt;/li&gt;
&lt;li&gt;TOC insertion should have an option to add empty lines&lt;/li&gt;
&lt;li&gt;TOC insertion should deal with multiple lines&lt;/li&gt;
&lt;li&gt;Automatically detect if we have a &lt;cite&gt;section-numbering::&lt;/cite&gt; in the
corresponding section, to render the toc.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="automatic-handling-of-txt-files"&gt;
&lt;h3&gt;Automatic handling of &lt;cite&gt;.txt&lt;/cite&gt; files&lt;/h3&gt;
&lt;p&gt;It would be nice to differentiate between text files using
reStructuredText and other general text files. If we had a function to
automatically guess whether a &lt;cite&gt;.txt&lt;/cite&gt; file is following the
reStructuredText conventions, we could trigger &lt;cite&gt;rst-mode&lt;/cite&gt; without
having to hard-code this in every text file, nor forcing the user to
add a local mode variable at the top of the file. We could perform
this guessing by searching for a valid adornment at the top of the
document or searching for reStructuredText directives further on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="entry-level-for-rst-straighten-adornments"&gt;
&lt;h3&gt;Entry level for rst-straighten-adornments&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;cite&gt;rst-straighten-adornments&lt;/cite&gt; should have an entry level to start at a
lower than the top level&lt;ul&gt;
&lt;li&gt;I for one prefer a verbose style for top level titles which is not
appropriate for documents without titles&lt;/li&gt;
&lt;li&gt;Should be done by a prefix argument&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry></feed>